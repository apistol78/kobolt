<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
ProjectileManager = ProjectileManager or class("ProjectileManager")

function ProjectileManager:new(world, physicsManager)
	self._world = world
	self._physicsManager = physicsManager
	self._projectiles = {}
end

function ProjectileManager:add(entityId, position, velocity)

	local entity = self._world:createEntity(entityId)
	self._world:addEntity(entity)

	local projectile = {}
	projectile.entity = entity
	projectile.position = position
	projectile.velocity = velocity
	projectile.age = 0
	table.insert(self._projectiles, projectile)
end

function ProjectileManager:update(info)
	local dT < const > = info.simulationDeltaTime
	local filter = physics.QueryFilter()

	for _, projectile in ipairs(self._projectiles) do
		if projectile.entity ~= nil then

			local from < const > = projectile.position
			local to < const > = from + impulse
	
			local result < const > = self._physicsManager:queryRay(
				from,
				(to - from):normalized(),
				(to - from).length,
				filter,
				false
			)
			if result == nil then
				projectile.position = to
				projectile.age = projectile.age + dT
				projectile.entity.transform = Transform(projectile.position, Quaternion.identity)
			else

				if result.body ~= nil then
					local impulse = projectile.velocity
					result.body:addImpulse(
						result.position,
						impulse,
						false
					)
				end

				self._world:removeEntity(projectile.entity)
				projectile.entity = nil
			end
		end
	end
	
end

	]]>
	</text>
</object>
